---
import { getCategories, getLanguages, getStore } from "@/helpers/store"
import Category from '@/components/Category.Circle.astro'
import { image } from '@/helpers/image';
import Layout from '@/layouts/Layout.astro'
import Markdown from '@/components/Markdown.astro';
import JSONLD  from 'jsonld';
import grapoi from "grapoi"
import type { GrapoiPointer } from '@/types'
import { gct, gctl, rdf, rdfs, schema } from "@/helpers/namespaces"

export async function getStaticPaths() {
	const languages = [...Object.keys(await getLanguages())].filter(language => language !== 'en')
	return languages.map(language => ({ params: { language }}))
}

const categories = await getCategories()
const languages = await getLanguages()
const language = languages[Astro.locals.language]

const store = await getStore()
const pointer = grapoi({ dataset: store, term: gct('Category') }).in([rdf('type')]) as GrapoiPointer

const quads = [...pointer.quads() ?? []]

let doc = await JSONLD.fromRDF(quads);
doc[0]['@type'] = [...new Set(doc[0]['@type'])]


---

<Layout title="Overview" bodyClass="home">

	<div class="site-introduction" slot="hero">
		<div class="top">
			<img loading="lazy" class="image" src={image(language.background, 1280, 300)} />
			<div class="title"><Markdown of={language.welcome} /></div>
		</div>

		<div class="logo">
			<img src="/logo.svg" />
		</div>

		<div class="description">
			<Markdown of={language.description ?? ''} />
		</div>
	</div>


	<input type="search" id="grid-filter" class="search-input" placeholder="Search..." slot="default" />

	<div class="overview grid categories" id="categories-grid" slot="default">
		{categories.map(category => <Category category={category} />)}
		<div class="empty circle category"></div>
		<div class="empty circle category"></div>
		<div class="empty circle category"></div>
		<div class="empty circle category"></div>
		<div class="empty circle category"></div>
		<div class="empty circle category"></div>
		<div class="empty circle category"></div>
		<div class="empty circle category"></div>
		<div class="empty circle category"></div>
	</div>	

	<script type="application/ld+json" set:html={JSON.stringify(doc, null, 2)}>
	</script>

</Layout>

<script>
	const search = document.querySelector('#grid-filter') as HTMLInputElement

	const applySearch = (searchWord: string) => {
		const categories = [...document.querySelectorAll('#categories-grid .category:not(.empty)')]
		for (const category of categories) {
			const searchwords = (category as HTMLDivElement).dataset.searchwords
			const title = category.querySelector('.title')?.textContent?.toLocaleLowerCase()
			const text = searchwords + ' ' + title
			const visible = text.includes(searchWord.toLocaleLowerCase())

			category.classList[visible ? 'remove' : 'add']('hidden')
		}
	}

	search?.addEventListener('keyup', () => applySearch(search.value))
	applySearch(search.value)
</script>